----
Seção 1: Locais comuns de arquivos de log
----

Um aspecto crucial da análise de log é entender onde localizar os arquivos de log gerados por vários aplicativos e sistemas. Embora os caminhos dos arquivos de log possam variar devido às configurações do sistema, versões de software e configurações personalizadas, conhecer os locais comuns dos arquivos de log é essencial para uma investigação eficiente e detecção de ameaças.

    Web Servers:
        Nginx:
            Access Logs: /var/log/nginx/access.log
            Error Logs: /var/log/nginx/error.log
        Apache:
            Access Logs: /var/log/apache2/access.log
            Error Logs: /var/log/apache2/error.log

    Databases:
        MySQL:
            Error Logs: /var/log/mysql/error.log
        PostgreSQL:
            Error and Activity Logs: /var/log/postgresql/postgresql-{version}-main.log

    Web Applications:
        PHP:
            Error Logs: /var/log/php/error.log

    Operating Systems:
        Linux:
            General System Logs: /var/log/syslog
            Authentication Logs: /var/log/auth.log

    Firewalls and IDS/IPS:
        iptables:
            Firewall Logs: /var/log/iptables.log
        Snort:
            Snort Logs: /var/log/snort/

Tarefa: 
	Em sua VM Linux

1. Verifique o conteúdo dos arquivos mencionados anteriormente (* dos existentes)

2. Existe um padrão dos dados armazenados nos logs?

----
Seção 2
Prática: Log Collection com rsyslog
----

1. Ver status do rsyslog
	sudo systemctl status rsyslog

2. Criar arquivo
	sudo vim /etc/rsyslog.d/98-websrv-02-sshd.conf

3. Adicionar conteúdo
	$FileCreateMode 0644
	:programname, isequal, "sshd" /var/log/websrv-02/rsyslog_sshd.log

4. Status rsyslog
	sudo systemctl status rsyslog
	systemctl restart syslog.socket rsyslog.service

5. Acessar diretório
	cd /var/log/websrv-02

6. Conectar remoto
	sudo ssh kali@localhost -p 22

7. Visualizar conteúdo do arquivo
	cat rsyslog_sshd.log

----
Perguntas
----

1. Após configurar o rsyslog para sshd, qual nome de usuário aparece nos logs do sshd em /var/log/websrv-02/rsyslog_sshd.log?

2. Existe algo indicando tentativas de login com falha ou força bruta?

3. Qual é o endereço IP aparece no conteúdo do arquivo de /var/log/websrv-02/rsyslog_sshd.log?

4. Com base nos logs gerados em /var/log/websrv-02/rsyslog_sshd.log, existe algum comando executado pelo usuário root?


----
Seção 3
Pratica: Log Management com logrotate
----

logrotate: ferramenta que automatiza a rotação, compressão e gerenciamento de arquivos de log, garantindo que os arquivos de log sejam manipulados sistematicamente.

1. Acessa o diretório:
	cd /var/log/websrv-02

2. Criar arquivo conf:
	sudo vim /etc/logrotate.d/98-websrv-02_sshd.conf

	/var/log/websrv-02/rsyslog_sshd.log {
	    daily
	    rotate 30
	    compress
	    lastaction
	        DATE=$(date +"%Y-%m-%d")
	        echo "$(date)" >> "/var/log/websrv-02/hashes_"$DATE"_rsyslog_sshd.txt"
	        for i in $(seq 1 30); do
	            FILE="/var/log/websrv-02/rsyslog_sshd.log.$i.gz"
	            if [ -f "$FILE" ]; then
	                HASH=$(/usr/bin/sha256sum "$FILE" | awk '{ print $1 }')
	                echo "rsyslog_sshd.log.$i.gz "$HASH"" >> "/var/log/websrv-02/hashes_"$DATE"_rsyslog_sshd.txt"
	            fi
	        done
	        systemctl restart rsyslog
	    endscript
	}

3. Executar a configuração:
	sudo logrotate -f /etc/logrotate.d/98-websrv-02_sshd.conf
	
4. Visualizar conteúdo do diretório:
	ls -lsa

5. Verificar conteúdo do arquivo:
	cat hashes_2025-03-09_rsyslog_sshd.txt 

----
Perguntas:
----

1. Com base na configuração do logrotate /etc/logrotate.d/98-websrv-02_sshd.conf, quantas versões de cópias antigas de arquivos de log compactados serão mantidas?

2. Com base na configuração do logrotate, qual é a frequência de rotação do log?


----
Seção 4
Prática: Trabalhando com logs - LogViewer
----

LogViewer é um aplicativo da Web para monitorar logs do servidor em tempo real no navegador.

1. Download da aplicação
	https://github.com/sevdokimov/log-viewer?tab=readme-ov-file

2. Executar 
	log-viewer-1.0.10/logviewer.sh

3. Abrir no navegador
	http://localhost:8111
	Selecionar um log do sistema de arquivos.

----
Seção 5
Pratica: Log Analysis Tools: Command Line
---

Utilize o arquivo: apache-ex.log

1. cat
2. less
3. tail
4. wc
5. cut
6. sort
7. uniq
8. sed
Para substituir todas as ocorrências de "31/Jul/2023" por "July 31, 2023"
	sed 's/31\/Jul\/2023/July 31, 2023/g' apache-ex.log

9. awk
Para imprimir entradas de log onde o código de resposta HTTP é maior ou igual a 400 (o que indicaria status de erro HTTP), podemos usar o seguinte comando:
	awk '$9 >= 400' apache-ex.log

10. grep
Entrada de log que atinja a página /admin.php no servidor, podemos procurar por "admin" para retornar quaisquer resultados relevantes:
	grep "admin" apache-ex.log

Número de ocorrencias
	grep -c "admin" apache-ex.log

Número da linha
	grep -n "admin" apache-ex.log

Não contém um padrão (-v invert)
	grep -v "/index.php" apache-ex.log | grep "203.64.78.90"

Tarefa: 
	Analise o arquivo access.log e descubra se houve tentativa de bruteforce

----
Seção 6
Prática: análise de logs
----

Criação de arquivo de log analisado e consolidado usando ferramentas Unix como cat, grep, sed, sort, uniq e awk

Para obter arquivos, utilize o repositório do Teams ou busque na internet alguns exemplos e faça download:
	filetype:log access.log
	filetype: log inurl:"access.log" 

Tarefa:
	Execute cada um dos exemplos a seguir e explique sua saída:

1. Processando nginx access.log
	awk -F'[][]' '{print "[" $2 "]", "--- /var/log/nginx/access.log ---", "\"" $0 "\""}' /var/log/nginx/access.log  | sed "s/ +0000//g" > /tmp/parsed_consolidatedn.log

2. Processando rsyslog_cron.log
	awk '{ original_line = $0; gsub(/ /, "/", $1); printf "[%s/%s/2023:%s] --- /var/log/websrv-02/rsyslog_cron.log --- \"%s\"\n", $2, $1, $3, original_line }' /var/log/websrv-02/rsyslog_cron.log >> /tmp/parsed_consolidatedr.log

3. Processando rsyslog_sshd.log
	awk '{ original_line = $0; gsub(/ /, "/", $1); printf "[%s/%s/2023:%s] --- /var/log/websrv-02/rsyslog_sshd.log --- \"%s\"\n", $2, $1, $3, original_line }' /var/log/websrv-02/rsyslog_sshd.log >> /tmp/parsed_consolidateds.log

4. Processando api_json.log
	awk -F'"' '{timestamp = $4; converted = strftime("[%d/%b/%Y:%H:%M:%S]", mktime(substr(timestamp, 1, 4) " " substr(timestamp, 6, 2) " " substr(timestamp, 9, 2) " " substr(timestamp, 12, 2) " " substr(timestamp, 15, 2) " " substr(timestamp, 18, 2) " 0 0")); print converted, "--- /var/log/api_json.log ---", "\""$0"\""}' /var/log/api_json.log >> /tmp/parsed_consolidateda.log

5. Explique se há diferenças entre os resultados (saídas dos comandos)

6. grep: para filtrar entrada especifica:

	grep "189.22.221.61" /tmp/parsed_consolidatedg.log > /tmp/filtered_consolidatedg.log

7. sort: para classificar todas as entradas de log por data e hora:

	sort /tmp/parsed_consolidated.log > /tmp/sort_parsed_consolidated.log

8. uniq: para remover entradas duplicadas:

	uniq /tmp/sort_parsed_consolidated.log > /tmp/uniq_sort_parsed_consolidated.log

9. Accessar arquivo log parsedo and consolidado, por meio da ferramenta Log Viewer, usando a URL:

	http://MACHINE_IP:8111/log?path=%2Ftmp%2Funiq_sort_parsed_consolidated.log


----
Seção 7: Log Analysis Tools: Regular Expressions
----

Regular Expressions usando grep
	Utilize o arquivo: apache-ex2.log

O  arquivo de log apache-ex2.log, contém entradas de log de um site de blog. O site é estruturado para que cada postagem de blog tenha seu ID exclusivo, obtido do banco de dados dinamicamente por meio do parâmetro de URL da postagem. 

1. Se estivermos interessados ​​apenas nas postagens de blog específicas com um ID entre 10-19, podemos executar o seguinte padrão de expressão regular grep no arquivo de log:

	grep -E 'post=1[0-9]' apache-ex2.log

Opção -E para indicar que estamos pesquisando um padrão e não apenas uma string.

Tarefa: 
	Usando o arquivo apache-ex2.log, crie 3 regex com grep

----
Seção 8: Regular Expressions para Log Parsing
---

Expressões regulares também desempenham um papel crucial na análise de log, que é o processo de dividir entradas de log em componentes estruturados e extrair informações relevantes deles. 

Considere a seguinte entrada de log bruto e não estruturado:

----------------------------------------           
126.47.40.189 - - [28/Jul/2023:15:30:45 +0000] "GET /admin.php HTTP/1.1" 200 1275 "" "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/99.0.9999.999 Safari/537.36"
----------------------------------------

Do ponto de vista da segurança, vários campos seriam benéficos para extrair e utilizar em um SIEM. Alguns deles incluem:

- IP address
- timestamp
- HTTP method (POST, GET, or PUT, for example)
- URL
- user-agent

RegExr (https://regexr.com/) é uma ferramenta online para ajudar a ensinar, construir e testar padrões de expressões regulares.

Como exemplo básico, se quisermos extrair apenas o endereço IP remoto deste log, podemos pensar na estrutura do endereço IP logicamente.

----------------------------------------           
126.47.40.189 - - [28/Jul/2023:15:30:45 +0000] "GET /admin.php HTTP/1.1" 200 1275 "" "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/99.0.9999.999 Safari/537.36"
----------------------------------------

\b([0-9]{1,3}\.){3}[0-9]{1,3}\b

Quebrando esse padrão, ele começa e termina com uma âncora de limite de palavra \b para garantir que correspondamos a endereços IP completos. Entre eles, definimos o seguinte:

[0-9]{1,3} - Corresponde a um a três dígitos para corresponder a números de 0 a 999.
\. - Escape corresponde a um caractere literal . no endereço IP.
{3} - Especifica que o grupo de captura anterior ([0-9]{1,3}\.) deve ser repetido três vezes.
[0-9]{1,3} - Novamente, isso corresponde a números de 0 a 999, completando o quarto octeto do endereço IP.


Tarefa: usando uma linha do arquivo log, crie 3 regex para Log Parsing

----
Seção 8: Regex com CyberChef
----

https://cyberchef.org

----------------------------------------           
126.47.40.189 - - [28/Jul/2023:15:30:45 +0000] "GET /admin.php HTTP/1.1" 200 1275 "" "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/99.0.9999.999 Safari/537.36"
----------------------------------------

Escolha uma das opções de regex existentes

----
Seção 9: Anatomia do Log de Eventos do Windows
----

Os logs de eventos do Windows fornecem informações detalhadas sobre o sistema, a segurança e os aplicativos instalados em um sistema operacional Windows. 

Default formato/extenção:
	.evt
	.evtx
Podem ser extraídos nos formatos:
	.xml
	.csv
	.txt
Localidade dos arquivos:
	C:\WINDOWS\System32\winevt\Logs

Ferramenta de visualização: Event Viewer 
	Execute: eventvwr.msc

Categorias
Windows Logs
	Application
	Security
	Setup
	System
	Fowarded Events
Applications and Services Logs
	Hardware Events
	Microsoft
	OpenSSH
	Windows PowerShell

ULogViewer: suporte para ler, parsear e analisar vários tipos de arquivos de log.
	Fazer download e executar ULogViewer
	https://github.com/carina-studio/ULogViewer

Tarefa: Abrir e analisar arquivos (repositório do Teams)
	Apache-Access.log
	Apache-Error.log
	linux.log

Os dados PID e TID são benéficos para rastreamento de processos, correlação e compreensão do fluxo natural de eventos durante a análise de logs.

Aprender a anatomia dos arquivos de log do Windows é essencial, mas você também precisará saber os IDs e detalhes indicativos do log de eventos. Portanto, você poderá rastrear e entender os detalhes de uma anomalia potencial ou uma tentativa de intrusão. Alguns IDs úteis do log de eventos do Windows estão listados abaixo:

Account Management	
	4720: User account creation.
	4722: User account enabled.
	4723: Attempt to change an account password.
	The user attempts to change their password.
	4724: Attempt to reset the account password.
The user attempts to reset the password of another account.
	4725: Account disable.
	4726: Account removal.
	Account Logon	
	4624: Successful logon.
	4625: Failed logon.
	4634 and 4647: Logoff.
	4779: Session disconnect.
Scheduled Tasks	
	4698: Scheduled task creation.
	4702: Scheduled task updated.
	4699: Scheduled task deletion.
Security	
	1100: Logging service disabled.
	1102: Log deletion.
	1116: Malware detection.

Mais informações sobre IDs:
https://www.ultimatewindowssecurity.com/securitylog/encyclopedia/default.aspx
https://learn.microsoft.com/pt-br/windows-server/identity/ad-ds/plan/appendix-l--events-to-monitor

----
Seção 10: logs de eventos CLI
----
Ferramentas para consultar logs de eventos por meio da linha de comando e/ou PowerShell.

1. wevtutil.exe: permite recuperar informações sobre logs de eventos e publicadores. (também pode usado para instalar e desinstalar manifestos de eventos, executar consultas e exportar, arquivar e limpar logs).

No PowerShell, execute:

Help do comando wevtutil.exe
	wevtutil.exe /?

Exibe os três eventos mais recentes do log do aplicativo em formato textual:
	wevtutil qe Application /c:3 /rd:true /f:text

Mais exemplos:
	https://learn.microsoft.com/en-us/windows-server/administration/windows-commands/wevtutil

2. Get-WinEvent: obtém eventos de logs de eventos e arquivos de log de rastreamento de eventos em computadores locais e remotos.

No PowerShell, execute:

Obter todos os logs de um computador
	Get-WinEvent -ListLog *

Obter provedores de log de eventos e nomes de log
	Get-WinEvent -ListProvider *

Filtragem de log
	Get-WinEvent -LogName Application | Where-Object { $_.ProviderName -Match 'WLMS' }

Obter logs de eventos de um servidor
	Get-WinEvent -ListLog * -ComputerName localhost | Where-Object { $_.RecordCount }

Mais exemplos:
	https://learn.microsoft.com/pt-br/powershell/module/microsoft.powershell.diagnostics/get-winevent?view=powershell-7.4

----
Seção: 11
----

Sysmon
Monitorar e registrar endpoints e ambientes.

Download do SysInternalse da configuração do Sysmon SwiftOnSecurity sysmon-config (https://github.com/SwiftOnSecurity/sysmon-config)

Iniciando o Sysmon
	Sysmon.exe -accepteula -i swift.xml

	O log de eventos (Event Viewer) está localizado em  Applications and Services Logs/Microsoft/Windows/Sysmon/Operational

----------------
Sysmon Config

Como a maioria das atividades normais ou "ruídos" vistos em uma rede são excluídos ou filtrados com o Sysmon, podemos nos concentrar em eventos significativos. Isso nos permite identificar e investigar rapidamente atividades suspeitas. Ao monitorar ativamente uma rede, você poderá usar várias detecções e técnicas simultaneamente em um esforço para identificar ameaças.

Use Get-WinEvent (PowerShell) ou wevutil.exe (cmd) para acessar e filtrar logs de forma manual. No entanto, o mais adequado é incorporar o Sysmon ao SIEM ou outras soluções de detecção. 

Baixar arquivos do respositório do Teams

Exemplo de uso de Get-WinEvent para procurar conexões de rede vindas da porta 4444.

	Get-WinEvent -Path Filtering.evtx -FilterXPath '*/System/EventID=3 and */EventData/Data[@Name="DestinationPort"] and */EventData/Data=4444'

Perguntas:
	Quantos eventos ID 3 estão em Filtering.evtx?
		(Get-WinEvent -Path Filtering.evtx -FilterXPath '*/System/EventID=3').count

	Qual é o horário UTC do primeiro evento de rede no mesmo arquivo de log?
		Get-WinEvent -Path Filtering.evtx -FilterXPath '*/System/EventID=3' -Oldest -MaxEvents 1 | Select-Object -Property *

No Visualizador de Eventos, abra o arquivo Hunting_Metasploit.evtx, e tente visualizaruma um upload do Metasploit sendo descarregada na máquina.
	exemplo: DestinationPort: 444

Portas abertas com o PowerShell
	Get-WinEvent -Path .\Hunting_Metasploit.evtx -FilterXPath '*/System/EventID=3 and */EventData/Data[@Name="DestinationPort"] and */EventData/Data=4444'

Detectando Mimikatz

Mimikatz é bem conhecido e comumente usado para "despejar" credenciais da memória em Windows

Podemos usar o ID do evento ProcessAccess para identificar comportamento anormal de Local Security Authority Subsystem Service (LSASS). Este evento, junto com o LSASS, mostraria um potencial abuso do LSASS que geralmente conecta de volta ao Mimikatz ou algum outro tipo de ferramenta de dumping de credenciais.
Mais informações em: https://www.microsoft.com/en-us/security/blog/2022/10/05/detecting-and-preventing-lsass-credential-dumping-attacks/?msockid=07a20ce48b07644f23131c558ad26504

Para detectar comportamento anormal do LSASS com o PowerShell:
	Get-WinEvent -Path Practice\Hunting_Mimikatz.evtx -FilterXPath '*/System/EventID=10 and */EventData/Data[@Name="TargetImage"] and */EventData/Data="C:\Windows\system32\lsass.exe"'

Plus: Além das técnicas na memória, a memória do processo LSASS pode ser despejada do host de destino e analisada em um sistema local:
	procdump -ma lsass.exe lsass_dump
	rundll32.exe C:\Windows\System32\comsvcs.dll MiniDump PID lsass.dmp

Hunting Malware
O malware tem muitas formas e variações com diferentes objetivos finais. Os dois tipos de malware nos quais nos concentraremos são Remote Access Trojans (RATs) e backdoors. 

No Visualizador de Eventos, abra o arquivo Hunting_Rats.evtx e tente visualizar o evento.
	exemplo: rat.exe
Para detectar comportamento via PS 
	Get-WinEvent -Path .\Hunting_Rats.evtx -FilterXPath '*/System/EventID=3 and */EventData/Data[@Name="DestinationPort"] and */EventData/Data=8080'


----
Tarefa
----

Os arquivos de eventos usados ​​nesta tarefa devem ser obtidos dos repositórios EVTX-ATTACK-SAMPLES (https://github.com/sbousseaden/EVTX-ATTACK-SAMPLES/tree/master) e SysmonResources (https://github.com/jymcheong/SysmonResources) do Github.

Investigação 1 - ESSE É O USB ERRADO!
	Nesta investigação, você recebeu relatórios de que um arquivo malicioso foi inserido em um host por um USB malicioso. Alguns logs suspeitos foram obtidos e atribuiram a você executar a investigação.
	Arquivo de log: Investigation-1.evtx
	Qual é a chave de registro completa do dispositivo USB chamando svchost.exe na Investigação 1?
	Qual é o nome do dispositivo quando é chamado por RawAccessRead na Investigação 1? (EventID para RawAccessRead é 9)
	Qual é o primeiro exe que o processo executa na Investigação 1?

Investigação 2 - Este não é um arquivo HTML?
	Outro arquivo suspeito apareceu em seus logs e conseguiu executar um código se mascarando como um arquivo HTML, evitando suas detecções antivírus. Abra os logs e investigue o arquivo suspeito.
	Arquivo de logs: Investigação-2.evtx
		Dica: A tag CommandLine pode dizer o payload que foi executado para disparar o evento.

Investigação 3.1 - 3.2 - Onde está o segurança quando você precisa dele

Sua equipe informou que o adversário conseguiu configurar a persistência em seus endpoints enquanto eles continuam a se mover pela sua rede. Descubra como o adversário conseguiu obter persistência usando os logs fornecidos.

Os logs estão localizados em C:\Usuários\THM-Analyst\Desktop\Cenários\Investigações\Investigação-3.1.evtx

e C:\Usuários\THM-Analyst\Desktop\Cenários\Investigações\Investigação-3.2.evtx.

Investigação 4 - Mãe, olha! Eu construí uma botnet!

Como o adversário ganhou uma posição sólida em sua rede, foi trazido à sua atenção que ele pode ter sido capaz de configurar comunicações C2 em alguns dos endpoints. Colete os logs e continue sua investigação.

Os logs estão localizados em C:\Users\THM-Analyst\Desktop\Scenarios\Investigations\Investigation-4.evtx.
